{"structs":[{"name":"LightInfo","structID":8052035126836186180,"variables":[{"variableID":3249978979217942403,"usage":0,"name":"IsEnabled","type":"bool"},{"variableID":6301559832903827976,"precision":"lowp","name":"LightType","type":"int","usage":0},{"variableID":4161955056912782361,"precision":"mediump","name":"LightPosition","type":"vec4","usage":0},{"variableID":44302607862241843,"precision":"lowp","name":"LightDirection","type":"vec3","usage":0},{"variableID":1553669063202244287,"precision":"mediump","name":"LightColor","type":"vec3","usage":0},{"variableID":2619067670163237883,"precision":"mediump","name":"Attenuation","type":"float","usage":0},{"variableID":15220753807619384082,"precision":"mediump","name":"SpotConsCutoff","type":"float","usage":0},{"variableID":6192175825770991975,"precision":"mediump","name":"SpotExponent","type":"float","usage":0}]}],"variables":[{"variableID":781038411599221514,"precision":"mediump","name":"SpecularColor","type":"vec3","usage":1},{"variableID":4522050508235329674,"precision":"mediump","name":"AmbientColor","type":"vec3","usage":1},{"variableID":10719783861868426865,"precision":"mediump","name":"ShininessExponent","type":"float","usage":1},{"variableID":571517356123321463,"usage":1,"name":"MainLight","type":"LightInfo"},{"variableID":9223210901354898742,"precision":"lowp","name":"LightDirection","type":"vec3","usage":3},{"variableID":12204106266451632538,"precision":"lowp","name":"EyeDirectionOut","type":"vec3","usage":3},{"variableID":5268517760165661644,"precision":"lowp","name":"Attenuation","type":"float","usage":3},{"variableID":5704507788748658430,"precision":"lowp","name":"Normal","type":"vec3","usage":3}],"function":{"functionContent":"{\n    lowp vec3 reflectDir = normalize(-reflect(LightDirection, normal));\n    float diffuse = max(0.0, dot(Normal, LightDirection));\n    float specular = max(0.0, dot(reflectDir, EyeDirectionOut));\n    specular = (diffuse == 0.0 || ShininessExponent == 0.0) ? 0.0 : pow(specular, ShininessExponent);\n    vec3 scatteredLight [3] = AmbientColor * Attenuation + MainLight.LightColor * diffuse * Attenuation;\n    vec3 reflectedLight = SpecularColor * specular * Attenuation;\n#link CEFrag_ApplyShadowEffect(scatteredLight, reflectedLight);\n    inputColor = min(inputColor * scatteredLight + reflectedLight, vec4(1.0));\n}","paramNames":["inputColor"],"linkFunctionDict":{"CEFrag_ApplyShadowEffect(vec3x3,vec3)":{"paramNames":["scatteredLight","reflectedLight"],"functionID":"CEFrag_ApplyShadowEffect(vec3x3,vec3)","linkRange":"{471, 63}"}},"functionID":"CEFrag_ApplyBaseLightEffect(vec4)","paramLocations":[["{539, 10}","{556, 10}"]]}}